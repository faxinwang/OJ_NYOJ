/*
小猴子下落
时间限制：3000 ms  |  内存限制：65535 KB
难度：3
描述
有一颗二叉树，最大深度为D,且所有叶子的深度都相同。所有结点从左到右从上到下的编号为1,2,3，·····，2的D次方减1。
在结点1处放一个小猴子，它会往下跑。每个内结点上都有一个开关，初始全部关闭，当每次有小猴子跑到一个开关上时，
它的状态都会改变，当到达一个内结点时，如果开关关闭，小猴子往左走，否则往右走，直到走到叶子结点。

一些小猴子从结点1处开始往下跑，最后一个小猴儿会跑到哪里呢？

输入
输入二叉树叶子的深度D,和小猴子数目I，假设I不超过整棵树的叶子个数，D<=20.最终以 0 0 结尾

输出
输出第I个小猴子所在的叶子编号。

样例输入
4 2
3 4
0 0

样例输出
12
7
*/
#include<iostream>
#include<cstdio>
using namespace std;

int main(){
#ifdef WFX
freopen("in.txt","r",stdin);
#endif
    int a,d;
    while(scanf("%d%d",&d,&a) && (a+d)){
        int ans = 1;
        for(int i=1;i<d;++i){ //往下落d-1次
            if(a % 2){ //奇数往左走
                ans = ans * 2; //变为左子结点的编号
                a = a / 2 + 1;
            }
            else{
                ans = ans * 2 + 1; //变为右子结点的编号
                a /= 2;
            }
        }
        printf("%d\n",ans);
    }

    return 0;
}